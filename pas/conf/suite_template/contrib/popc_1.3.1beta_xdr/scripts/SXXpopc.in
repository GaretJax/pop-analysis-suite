# Startup script for POPC service, standalone version
# Update : All updates are surounded by comment with the author's name
# Date			Author		Comment
# 13/05/2010	clementval	Add Node entry for service.map

#POPC_DOMAIN=UNKNOWN

#This variable is used in popcobjrun on starting the parallel object
#POPC_PROXY

#The following variables are used if this host runs proxy service
#PROXY_PORT
#POPC_PROXY_NETMASK
#POPC_PROXY_PORTS
#POPC_PROXY_PARENT

ARG1="$1"
shift
ARGS="$*"

if [ -z "${POPC_TEMP}" ]; then
POPC_TEMP=/tmp
export POPC_TEMP
fi

if [ ! -d $POPC_TEMP ]; then
mkdir $POPC_TEMP
fi

if [ -z "${POPC_PORT}" ]; then
POPC_PORT=2711
fi

#. ${POPC_LOCATION}/etc/popc-runtime-env.sh

PATH=${POPC_LOCATION}/bin:${POPC_LOCATION}/services:${PATH}
export PATH

LD_LIBRARY_PATH=${POPC_LOCATION}:${POPC_LOCATION}/lib:${LD_LIBRARY_PATH}
export LD_LIBRARY_PATH

prog="$POPC_LOCATION/services/jobmgr_launcher"
serviceproxy=""

if [ "X${POPC_JOBMGR_PROXY}" != "X" ]; then
    serviceproxy="-proxy=${POPC_JOBMGR_PROXY}"
fi

userid=`whoami`

TMPKEY=${POPC_TEMP}/jobmgr_${userid}.key

servicemap="$POPC_LOCATION/etc/service.map"
mapentry=`grep "JobMgr " $servicemap`
if [ -z "${mapentry}" ]; then
$POPC_LOCATION/services/jobmgr -listlong | grep "JobMgr " >> $POPC_LOCATION/etc/service.map
fi

#Added by clementval
nodemapentry=`grep "POPCSearchNode " $servicemap`
if [ -z "${nodemapentry}" ]; then
$POPC_LOCATION/services/popc_search_node -listlong | grep "POPCSearchNode " >> $POPC_LOCATION/etc/service.map
fi
#End of add

start() {
    if [ -n "${PROXY_PORT}" ]; then
	echo "Starting delegate service..."
	$POPC_LOCATION/bin/popcrun -noproxy $POPC_LOCATION/etc/service.map $POPC_LOCATION/services/launchproxy -proxyport=${PROXY_PORT} start
    fi
    echo "Starting POPC Job manager service: "
    $POPC_LOCATION/bin/popcrun $servicemap $prog start $serviceproxy  -port=${POPC_PORT} -genchallenge=$TMPKEY $ARGS
    RETVAL=$?
    return $RETVAL
}

stop() {
    if [ -n "${PROXY_PORT}" ]; then
	echo "Stopping delegate service..."
	$POPC_LOCATION/bin/popcrun -noproxy $servicemap $POPC_LOCATION/services/launchproxy -proxyport=${PROXY_PORT} stop
    fi
    echo "Stopping POPC Job manager service..."
    $POPC_LOCATION/bin/popcrun $servicemap $prog stop  -port=${POPC_PORT} -challenge=`cat $TMPKEY` $ARGS
    RETVAL=$?
    test $RETVAL -eq 0 || return $RETVAL
    if [ -f ${POPC_TEMP}/jobmgr.pid ]; then
	pid=`cat ${POPC_TEMP}/jobmgr.pid`
	rm ${POPC_TEMP}/jobmgr_stdout_$pid ${POPC_TEMP}/jobmgr_stderr_$pid ${POPC_TEMP}/jobmgr.pid $TMPKEY
    fi
    return 0
}

case "$ARG1" in
        start)
            start
            ;;
 
        stop)
            stop
            ;;
 
        status)
            ;;
        restart)
            stop
            start
            ;;
        *)
            echo "Usage: $0 {start|stop|restart}"
            exit 1
                                                                                
esac
                                                                                
exit 0






